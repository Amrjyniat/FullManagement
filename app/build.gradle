plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'

//    id "com.google.protobuf" version "0.8.17"
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.productivity.fullmangement"
        minSdk 21
        targetSdk 31
        versionCode 8
        versionName "1.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.5.21'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    sourceSets {
        // Adds exported schema location as test app assets.
        debug.assets.srcDirs += files("$projectDir/schemas".toString())
        getByName("androidTest").assets.srcDir("$projectDir/schemas")
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:$constraint_compose_version"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-rc01'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.compose.ui:ui-viewbinding:$compose_version"
    implementation 'androidx.databinding:baseLibrary:3.2.0-alpha11'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:28.4.2')
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'androidx.browser:browser:1.3.0'
    implementation 'com.firebaseui:firebase-ui-auth:8.0.0'
//    implementation 'com.google.android.gms:play-services-auth:19.2.0'

    //Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    //ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$viewmodel_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$viewmodel_version"
//    implementation "androidx.lifecycle:lifecycle-common-java8:$viewmodel_version"

    //Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    //Hilt Jetpack
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Hilt ViewModel
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'


    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    //Fragment
    implementation "androidx.fragment:fragment-ktx:1.3.0"

    //Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    //DataStore
    implementation "androidx.datastore:datastore-preferences:$datastore_version"

//    implementation "androidx.datastore:datastore-core:$datastore_version"
//    implementation  "com.google.protobuf:protobuf-javalite:3.18.0"

    //viewPager alternative
    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"

    //Helper Compose
    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"
    // If using insets-ui
    implementation "com.google.accompanist:accompanist-insets-ui:$accompanist_version"

    //Date Time picker
    implementation "io.github.vanpra.compose-material-dialogs:datetime:0.6.1"

    implementation 'com.github.Amrjyniat:Swipeable-Card:1.0.0'

    implementation "androidx.compose.material:material-icons-extended:1.1.0-beta03"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.5.31"

    // So, make sure you also include that repository in your project's build.gradle file.
    implementation 'com.google.android.play:core:1.10.2'

    // For Kotlin users also add the Kotlin extensions library for Play Core:
    implementation 'com.google.android.play:core-ktx:1.8.1'


}

/*
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}*/
